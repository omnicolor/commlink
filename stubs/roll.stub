<?php

declare(strict_types=1);

namespace {{ namespace }};

use App\Events\DiscordMessageReceived;
use App\Http\Responses\Slack\SlackResponse;
use App\Models\Channel;
use App\Models\Slack\TextAttachment;
use App\Rolls\Roll;
use Facades\App\Services\DiceService;

use function sprintf;

use const PHP_EOL;

class {{ class }} extends Roll
{
    protected ?string $error = null;

    public function __construct(
        string $content,
        string $character,
        Channel $channel,
        public ?DiscordMessageReceived $event = null,
    ) {
        parent::__construct($content, $character, $channel);
    }

    public function forDiscord(): string
    {
        if (null !== $this->error) {
            return $this->error;
        }

        return sprintf('**%s**', $this->title) . PHP_EOL . $this->text;
    }

    public function forIrc(): string
    {
        if (null !== $this->error) {
            return $this->error;
        }

        return $this->title . PHP_EOL . $this->text;
    }

    public function forSlack(): SlackResponse
    {
        $attachment = new TextAttachment(
            $this->title,
            $this->text,
            TextAttachment::COLOR_SUCCESS
        );
        $response = new SlackResponse('', SlackResponse::HTTP_OK, [], $channel);
        return $response->addAttachment($attachment)->sendToChannel();
    }
}
