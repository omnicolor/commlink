name: PHP Static Analysis

permissions:
  contents: read

on: pull_request

jobs:
  Lint:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.4"
    steps:
      - name: Checkout repository
        uses: "actions/checkout@v4"

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          extensions: "json, mbstring, mongodb, pdo"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction

      - name: Check syntax (php-parallel-lint)
        run: vendor/bin/parallel-lint app config database routes tests Modules

  PHPStan:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.4"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          extensions: "json, mbstring, mongodb, pdo"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction

      - name: Run PHPStan analysis
        run: vendor/bin/phpstan analyze --no-progress

  Rector:
    runs-on: "Ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.4"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          extensions: "json, mbstring, mongodb, pdo"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction

      - name: Rector cache
        uses: actions/cache@v4
        with:
          path: /tmp/rector
          key: ${{ runner.os }}-rector-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-rector-

      - run: mkdir -p /tmp/rector

      - name: Rector dry run
        run: vendor/bin/rector process --dry-run --config=rector.php
