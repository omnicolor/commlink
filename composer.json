{
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "wyrihaximus/composer-update-bin-autoload-path": false,
            "icanhazstring/composer-unused": true,
            "infection/extension-installer": false,
            "php-http/discovery": true,
            "captainhook/captainhook-phar": true,
            "captainhook/hook-installer": true
        }
    },
    "description": "Commlink is a manager for characters and campaigns for various table top role playing games.",
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "license": "MIT",
    "minimum-stability": "stable",
    "name": "omnicolor/commlink",
    "prefer-stable": true,
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/omnicolor/php-irc-client"
        },
        {
            "type": "vcs",
            "url": "https://github.com/omnicolor/phpmnd"
        }
    ],
    "require": {
        "php": "^8.2",
        "ext-curl": "*",
        "ext-mongodb": "^1.15",
        "ext-random": "*",
        "ext-redis": "*",
        "ext-zip": "*",
        "captainhook/hook-installer": "^1.0",
        "guzzlehttp/guzzle": "^7.3",
        "jerodev/php-irc-client": "dev-main",
        "laravel/framework": "^10.0",
        "laravel/pennant": "^1.1",
        "laravel/sanctum": "^3.2",
        "laravel/socialite": "^5.6",
        "markrogoyski/math-php": "^2.8",
        "mongodb/laravel-mongodb": "^4.3",
        "php-jsonpatch/php-jsonpatch": "^4.1",
        "pusher/pusher-php-server": "^7.0",
        "socialiteproviders/discord": "^4.1",
        "socialiteproviders/google": "^4.1",
        "spatie/laravel-permission": "^6.0",
        "spatie/laravel-signal-aware-command": "^1.3",
        "team-reflex/discord-php": "^7.0"
    },
    "require-dev": {
        "ext-sqlite3": "*",
        "brianium/paratest": "^7.4",
        "captainhook/captainhook-phar": "^5.23",
        "cypresslab/gitelephant": "^4.5",
        "doctrine/dbal": "^3.1",
        "fakerphp/faker": "^1.9",
        "friendsofphp/php-cs-fixer": "^3.49",
        "icanhazstring/composer-unused": "^0.8",
        "infection/infection": "^0.27.0",
        "larastan/larastan": "^2.7",
        "laravel/breeze": "^1.0",
        "laravel/prompts": "^0.1.3",
        "laravel/tinker": "^2.7",
        "mockery/mockery": "^1.4",
        "nunomaduro/collision": "^7.10",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpstan/phpstan": "^1.2",
        "phpstan/phpstan-strict-rules": "^1.1",
        "phpunit/phpunit": "^10.0",
        "povils/phpmnd": "dev-master",
        "psalm/plugin-laravel": "^2.7",
        "roave/security-advisories": "dev-latest",
        "spatie/laravel-ignition": "^2.0",
        "squizlabs/php_codesniffer": "^3.6",
        "vimeo/psalm": "^5.6",
        "worksome/envy": "^1.1"
    },
    "scripts": {
        "all": [
            "@lint",
            "@phpcs",
            "@php-cs-fixer",
            "@phpstan",
            "@psalm",
            "@coverage",
            "@lint-openapi"
        ],
        "coverage": [
            "XDEBUG_MODE=coverage ./artisan test --parallel --coverage-html=public/coverage --coverage-xml=public/coverage/coverage-xml --log-junit=public/coverage/junit.xml"
        ],
        "infection": "infection --coverage=public/coverage",
        "lint": "parallel-lint --colors app config data database routes tests",
        "lint-openapi": "npx @redocly/cli lint public/openapi.yml",
        "php-cs-fixer": "php-cs-fixer fix --dry-run --config=php_cs.php -v --diff",
        "phpcs": "phpcs -p --colors --cache",
        "phpmnd": "phpmnd --progress app",
        "phpstan": [
            "Composer\\Config::disableProcessTimeout",
            "phpstan analyze"
        ],
        "psalm": "psalm",
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "captainhook install -f -s"
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "static": [
            "@lint",
            "@phpstan",
            "@psalm"
        ],
        "style": [
            "@phpcs",
            "@php-cs-fixer"
        ],
        "test": "./artisan test --parallel --recreate-databases"
    },
    "scripts-descriptions": {
        "all": "Run all unit/feature tests with code coverage, then code style check, then PHPstan",
        "coverage": "Run all unit/feature tests and create a code coverage report in public/coverage",
        "infection": "Test the test suite with Infection",
        "lint": "Run lint across code to make sure it's syntactically valid",
        "lint-openapi": "Verify the OpenAPI document is valid",
        "php-cs-fixer": "Run php-cs-fixer",
        "phpcs": "Run PHPCodesniffer",
        "phpmnd": "Run PHP Magic Number Detector",
        "phpstan": "Run PHPstan",
        "psalm": "Run Psalm",
        "static": "Run static analysis (Lint, PHPStan, and Psalm)",
        "style": "Run PHPCodesniffer and php-cs-fixer",
        "test": "Run all unit/feature tests"
    },
    "type": "project"
}
