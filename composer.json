{
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "wyrihaximus/composer-update-bin-autoload-path": false,
            "icanhazstring/composer-unused": true,
            "infection/extension-installer": false
        }
    },
    "description": "Commlink RPG manager.",
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "license": "MIT",
    "minimum-stability": "dev",
    "name": "omnicolor/commlink",
    "prefer-stable": true,
    "require": {
        "php": "^8.0",
        "doctrine/dbal": "^3.1",
        "fruitcake/laravel-cors": "^3.0",
        "guzzlehttp/guzzle": "^7.3",
        "jenssegers/mongodb": "^3.8",
        "juststeveking/laravel-feature-flags": "^1.0",
        "laravel/framework": "^9.0",
        "laravel/sanctum": "^3.0",
        "laravel/socialite": "^5.6",
        "laravel/tinker": "^2.7",
        "php-jsonpatch/php-jsonpatch": "^4.1",
        "pusher/pusher-php-server": "^7.0",
        "sentry/sentry-laravel": "^3.1.2",
        "socialiteproviders/discord": "^4.1",
        "team-reflex/discord-php": "^7.0"
    },
    "require-dev": {
        "fakerphp/faker": "^1.9",
        "friendsofphp/php-cs-fixer": "^3.0",
        "icanhazstring/composer-unused": "^0.8",
        "laravel/breeze": "^1.0",
        "laravel/sail": "^1.0",
        "mockery/mockery": "^1.4",
        "nunomaduro/larastan": "^2.0",
        "php-mock/php-mock-phpunit": "^2.6",
        "phpstan/phpstan": "^1.2",
        "phpstan/phpstan-strict-rules": "^1.1",
        "phpunit/phpunit": "^9.3",
        "ramsey/uuid": "^4.3",
        "roave/security-advisories": "dev-latest",
        "spatie/laravel-ignition": "^1.2",
        "squizlabs/php_codesniffer": "^3.6"
    },
    "scripts": {
        "all": [
            "@coverage",
            "@cs",
            "@phpstan"
        ],
        "coverage": [
            "Composer\\Config::disableProcessTimeout",
            "phpunit --coverage-html=public/coverage"
        ],
        "cs": "phpcs && PHP_CS_FIXER_IGNORE_ENV=1 php-cs-fixer fix --dry-run --config=php_cs.php -v --using-cache=no --diff",
        "phpstan": [
            "Composer\\Config::disableProcessTimeout",
            "phpstan --xdebug analyze"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "test": [
            "Composer\\Config::disableProcessTimeout",
            "phpunit"
        ]
    },
    "scripts-descriptions": {
        "all": "Run all unit/feature tests with code coverage, then code style check, then PHPstan",
        "coverage": "Run all unit/feature tests and create a code coverage report in public/coverage",
        "cs": "Run PHPCodesniffer and php-cs-fixer on the entire codebase",
        "phpstan": "Run PHPstan on the entire codebase",
        "test": "Run all unit/feature tests"
    },
    "type": "project"
}
