{
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "wyrihaximus/composer-update-bin-autoload-path": false,
            "infection/extension-installer": false,
            "php-http/discovery": true,
            "captainhook/captainhook-phar": true,
            "captainhook/hook-installer": true,
            "wikimedia/composer-merge-plugin": true
        }
    },
    "description": "Commlink is a manager for characters and campaigns for various table top role playing games.",
    "extra": {
        "laravel": {
            "dont-discover": [
                "laravel/telescope"
            ]
        },
        "merge-plugin": {
            "include": [
                "Modules/*/composer.json"
            ]
        }
    },
    "license": "MIT",
    "minimum-stability": "stable",
    "name": "omnicolor/commlink",
    "prefer-stable": true,
    "require": {
        "php": "^8.3",
        "ext-curl": "^7.34|^8.0",
        "ext-fileinfo": "*",
        "ext-mongodb": "^1.15",
        "ext-random": "*",
        "ext-redis": "*",
        "ext-zip": "*",
        "calebporzio/sushi": "^2.5",
        "captainhook/hook-installer": "^1.0",
        "fakerphp/faker": "^1.23",
        "guzzlehttp/guzzle": "^7.3",
        "laravel/framework": "^11.0",
        "laravel/pennant": "^1.1",
        "laravel/pulse": "^1.2",
        "laravel/sanctum": "^4.0",
        "laravel/socialite": "^5.6",
        "league/commonmark": "^2.6",
        "markrogoyski/math-php": "^2.8",
        "mongodb/laravel-mongodb": "^5.1",
        "nwidart/laravel-modules": "11.0.11",
        "omnicolor/php-irc-client": "^1.1",
        "php-jsonpatch/php-jsonpatch": "^4.1",
        "pusher/pusher-php-server": "^7.0",
        "sentry/sentry-laravel": "^4.7",
        "socialiteproviders/discord": "^4.1",
        "socialiteproviders/google": "^4.1",
        "spatie/laravel-permission": "^6.0",
        "spatie/laravel-signal-aware-command": "^2.0",
        "team-reflex/discord-php": "^10.1"
    },
    "require-dev": {
        "ext-sqlite3": "*",
        "brianium/paratest": "^7.4",
        "calebdw/fakerstan": "^1.0",
        "captainhook/captainhook-phar": "^5.23",
        "cypresslab/gitelephant": "^4.5",
        "friendsofphp/php-cs-fixer": "^3.49",
        "larastan/larastan": "^3.0",
        "laravel/breeze": "^2.0",
        "laravel/prompts": "^0.3",
        "laravel/telescope": "^5.2",
        "laravel/tinker": "^2.9",
        "mockery/mockery": "^1.4",
        "nunomaduro/collision": "^8.1",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpstan/phpstan": "^2.0",
        "phpstan/phpstan-deprecation-rules": "^2.0",
        "phpstan/phpstan-phpunit": "^2.0",
        "phpstan/phpstan-strict-rules": "^2.0",
        "phpunit/phpunit": "^11.0",
        "roave/security-advisories": "dev-latest",
        "spatie/laravel-ignition": "^2.0",
        "squizlabs/php_codesniffer": "^3.6",
        "worksome/envy": "^1.1"
    },
    "scripts": {
        "all": [
            "@lint",
            "@phpcs",
            "@php-cs-fixer",
            "@phpstan",
            "@coverage",
            "@lint-openapi"
        ],
        "coverage": [
            "XDEBUG_MODE=coverage phpunit --coverage-html=public/coverage"
        ],
        "infection": "infection --coverage=public/coverage",
        "lint": "parallel-lint --colors app config database routes tests Modules",
        "lint-openapi": "npx @redocly/cli lint public/openapi.yml",
        "php-cs-fixer": "php-cs-fixer fix --dry-run --config=php_cs.php -v --diff",
        "phpcs": "phpcs -p --colors --cache",
        "phpstan": [
            "Composer\\Config::disableProcessTimeout",
            "phpstan analyze"
        ],
        "prism": [
            "Composer\\Config::disableProcessTimeout",
            "node ./node_modules/@stoplight/prism-cli/dist/index.js proxy ./public/openapi.yml https://commlink-dev.digitaldarkness.com/api/"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "captainhook install -f -s"
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "static": [
            "@lint",
            "@phpstan"
        ],
        "style": [
            "@phpcs",
            "@php-cs-fixer"
        ],
        "test": "./artisan test --parallel --recreate-databases"
    },
    "scripts-descriptions": {
        "all": "Run all unit/feature tests with code coverage, then code style check, then PHPstan",
        "coverage": "Run all unit/feature tests and create a code coverage report in public/coverage",
        "infection": "Test the test suite with Infection",
        "lint": "Run lint across code to make sure it's syntactically valid",
        "lint-openapi": "Verify the OpenAPI document is valid",
        "php-cs-fixer": "Run php-cs-fixer",
        "phpcs": "Run PHPCodesniffer",
        "phpstan": "Run PHPstan",
        "prism": "Start a Stoplight Prism proxy for testing OpenAPI documentation versus actual responses",
        "static": "Run static analysis (Lint and PHPStan)",
        "style": "Run PHPCodesniffer and php-cs-fixer",
        "test": "Run all unit/feature tests"
    },
    "type": "project"
}
